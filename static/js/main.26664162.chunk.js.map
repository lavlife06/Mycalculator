{"version":3,"sources":["App.js","index.js"],"names":["App","state","value","displayString","waitingForOperand","currentoperator","holdInput","digit","setState","handleDel","slice","length","handleSqroot","Math","sqrt","handleClear","handleOperation","operator","nextValue","parseFloat","computedValue","preValue","String","className","this","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26664162.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  // displayString= current display string\n  // value= it stores current value after  arithmetic operation or it stores the value of current number\n  // currentoperator will remember the arithmetic operation that has to be done i.e- 2 + 3 , here when \"+\" was clicked,then currentoperator remembers it which help in further arithmetic-operation  \n  // waitingForOperand = false implies that \"+\",\"-\" etc has never invoked and true then vice-versa, it helps in knowing  whether any arithmetic-operator is clicked or not. \n  state={\n      value: null,\n      displayString: '0',\n      waitingForOperand: false,\n      currentoperator: null\n    }\n  holdInput = (digit) => {\n    let {displayString,waitingForOperand} = this.state;\n    if(waitingForOperand){\n      this.setState({\n        displayString: digit,\n        waitingForOperand: false\n      })\n    }else{\n      this.setState({\n       displayString: displayString === '0' ? digit : displayString === \"Error\" ? \"Error\" : displayString + digit,\n    })}\n  }\n\n handleDel = () => {\n  let { displayString } = this.state;\n  if(displayString!== \"Error\"){\n    this.setState({displayString: displayString.slice(0,displayString.length-1)});\n  }\n };\n\n handleSqroot = () => {\n  let { displayString } = this.state;\n  if(displayString!== \"Error\"){\n    this.setState({displayString: Math.sqrt(displayString)});\n  }\n}\n\nhandleClear = () => {\n  this.setState({displayString: '0'});\n};\n\nhandleOperation = (operator) => {\n  const { displayString, value, currentoperator, waitingForOperand} = this.state;\n  if(displayString!== \"Error\"){\n    if(waitingForOperand===true && currentoperator!==\"=\"){\n      this.setState(\n        { \n          value: null,\n          displayString: \"Error\",\n          waitingForOperand: false,\n          currentoperator: null\n        }\n      );\n    }else{\n      const nextValue = parseFloat(displayString)\n      const operations ={\n        \"/\": (preValue,nextValue) => preValue/nextValue,\n        \"X\": (preValue,nextValue) => preValue*nextValue,\n        \"%\": (preValue,nextValue) => preValue%nextValue,\n        \"-\": (preValue,nextValue) => preValue - nextValue,\n        \"+\": (preValue,nextValue) => preValue + nextValue,\n        \"=\": (preValue,nextValue) => nextValue\n      };\n      if(value == null){\n        this.setState({\n          value: nextValue\n        })\n      }else if(operator){\n        const currentValue = value || 0;\n        const computedValue = operations[currentoperator](currentValue, nextValue);\n        this.setState({\n          value: computedValue,\n          displayString: String(computedValue)\n        })\n      };\n      this.setState({\n        waitingForOperand: true,\n        currentoperator: operator\n      });\n    }\n  }\n}\n\n  render(){\n    return (\n      <div className=\"container\">\n          {/* <pre>{JSON.stringify(this.state,null ,2)}</pre> */}\n          <div className=\"display\">{this.state.displayString}</div>\n          <button className=\"a\" onClick={this.handleClear}>AC</button>\n          <button className=\"b\" onClick={() => this.holdInput(\"7\")}>7</button>\n          <button className=\"c\" onClick={() => this.holdInput(\"8\")}>8</button>\n          <button className=\"d\" onClick={() => this.holdInput(\"9\")}>9</button>\n          <button className=\"e\" onClick={() => this.handleOperation(\"%\")}>%</button>\n          <button className=\"f\" onClick={this.handleSqroot}>squareroot</button>\n          <button className=\"g\" onClick={this.handleDel}>DEL</button>\n          <button className=\"h\" onClick={() => this.holdInput(\"4\")}>4</button>\n          <button className=\"i\" onClick={() => this.holdInput(\"5\")}>5</button>\n          <button className=\"j\" onClick={() => this.holdInput(\"6\")}>6</button>\n          <button className=\"k\" onClick={() => this.handleOperation(\"X\")}>X</button>\n          <button className=\"l\" onClick={() => this.handleOperation(\"/\")}>/</button>\n          <button className=\"m\">sin()</button>\n          <button className=\"n\" onClick={() => this.holdInput(\"1\")}>1</button>\n          <button className=\"o\" onClick={() => this.holdInput(\"2\")}>2</button>\n          <button className=\"p\" onClick={() => this.holdInput(\"3\")}>3</button>\n          <button className=\"q\" onClick={() => this.handleOperation(\"-\")}>-</button>\n          <button className=\"r\">cos()</button>\n          <button className=\"s\" onClick={() => this.holdInput(\"0\")}>0</button>\n          <button className=\"t\" onClick={() => this.holdInput(\"00\")}>00</button>\n          <button className=\"u\" onClick={() => this.holdInput(\".\")}>.</button>\n          <button className=\"v\" onClick={() => this.handleOperation(\"+\")}>+</button>\n          <button className=\"w\" onClick={() => this.handleOperation(\"=\")}>=</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}